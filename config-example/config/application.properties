#
# Application settings
#

# Properties injected from Maven
# See: https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-automatic-expansion-maven
application.name=@project.name@
application.version=@project.version@

spring.main.banner-mode = off

#
# Server
#

server.port=8080

opertus-mundi.base-url=http://localhost:8080

#
# Logging
#

logging.config = classpath:log4j2.xml

#
# Profiles
#

spring.profiles.active = production

#
# Application settings
#

spring.main.banner-mode = off

#
# JPA
#

spring.jpa.properties.hibernate.dialect = org.hibernate.spatial.dialect.postgis.PostgisDialect
spring.jpa.open-in-view=false

#
# JPA hibernate
#

spring.jpa.hibernate.ddl-auto = validate

# Authentication Providers (comma-separated list of authentication provider keys)
# 
# forms: Forms login using username/password
# google: OAuth using Google IDP
# github: OAuth using GitHub IDP
# opertusmundi: OAuth/OpenID Connect using OpertusMundi Keycloak IDP

opertus-mundi.authentication-providers = forms

# Authentication properties
opertus-mundi.auth.name-aliases[0] = name
opertus-mundi.auth.email-aliases[0] = email
opertus-mundi.auth.image-aliases[0] = avatar_url
opertus-mundi.auth.image-aliases[1] = picture
opertus-mundi.auth.locale-aliases[0] = locale

#
# OAuth2
#

github.client.clientId =
github.client.clientSecret =
github.client.accessTokenUri = https://github.com/login/oauth/access_token
github.client.userAuthorizationUri = https://github.com/login/oauth/authorize
github.client.authenticationScheme = form
github.user-info-endpoint = https://api.github.com/user
github.jwks-uri =

google.client.clientId =
google.client.clientSecret =
google.client.accessTokenUri = https://accounts.google.com/o/oauth2/token
google.client.userAuthorizationUri = https://accounts.google.com/o/oauth2/v2/auth
google.client.authenticationScheme = form
google.client.scope = https://www.googleapis.com/auth/userinfo.email,https://www.googleapis.com/auth/userinfo.profile
google.user-info-endpoint = https://www.googleapis.com/oauth2/v3/userinfo
google.jwks-uri = https://www.googleapis.com/oauth2/v3/certs

opertus-mundi.client.clientId = 
opertus-mundi.client.clientSecret = 
opertus-mundi.client.accessTokenUri = https://accounts.hellenicdataservice.gr/auth/realms/dev-opertusmundi/protocol/openid-connect/token
opertus-mundi.client.userAuthorizationUri = https://accounts.hellenicdataservice.gr/auth/realms/dev-opertusmundi/protocol/openid-connect/auth
opertus-mundi.client.useCurrentUri = false
opertus-mundi.client.preEstablishedRedirectUri =
opertus-mundi.client.scope = openid,profile,person,email
opertus-mundi.user-info-endpoint = https://accounts.hellenicdataservice.gr/auth/realms/dev-opertusmundi/protocol/openid-connect/userinfo
opertus-mundi.jwks-uri = https://accounts.hellenicdataservice.gr/auth/realms/dev-opertusmundi/protocol/openid-connect/certs

#
# HttpClient
#
http-client.maxTotal = 200
http-client.maxPerRoute = 20

# 
# API Documentation
#

springdoc.api-docs.enabled = false
springdoc.api-docs.server = https://api.dev.opertusmundi.eu

# Set Open API specification
# The specification file will be available at http(s)://<address>:<port>/api-docs
springdoc.api-docs.path = /api-docs

# Must be set to prevent auto-configuration overriding resources for static assets
# See: https://springdoc.github.io/springdoc-openapi-demos/faq.html
# The specification file will be available at http(s)://<address>:<port>/swagger-ui/api-docs.html
springdoc.swagger-ui.path= /swagger-ui/api-docs.html

springdoc.swagger-ui.docExpansion=none
springdoc.swagger-ui.defaultModelsExpandDepth=-1

#
# CSRF
#

opertus-mundi.security.csrf-enabled = true

#
# OAuth2 callback URIs
#

opertus-mundi.oauth.callback-uri=/
opertus-mundi.oauth.failure-uri=/error/401

#
# Spring Cloud Feign clients
#

# https://cloud.spring.io/spring-cloud-static/spring-cloud-openfeign/2.3.4.RELEASE/reference/html/
#
# In order to maintain backward compatibility, Ribbon is used as the default load-balancer 
# implementation. However, Spring Cloud Netflix Ribbon is now in maintenance mode, so we 
# recommend using Spring Cloud LoadBalancer instead. To do this, set the value of 
# spring.cloud.loadbalancer.ribbon.enabled to false.
 
spring.cloud.loadbalancer.ribbon.enabled=false

feign.httpclient.enabled=true

# Path to the key store with private keys for signing JWT tokens
opertusmundi.feign.key-store.path=
# Password for the key store
opertusmundi.feign.key-store.password=
# Global secret for signing JWT tokens shared by all services
opertusmundi.feign.jwt.secret=

# Catalogue service (no authentication)
opertusmundi.feign.catalogue.name=catalogue
opertusmundi.feign.catalogue.url=

# BPM server (no authentication)
opertusmundi.feign.bpm-server.name=bpm-server
opertusmundi.feign.bpm-server.url=
opertusmundi.feign.bpm-server.basic-auth.username=
opertusmundi.feign.bpm-server.basic-auth.password=

# Rating service (basic authentication)
opertusmundi.feign.rating-service.name=rating-service
opertusmundi.feign.rating-service.url=
opertusmundi.feign.rating-service.basic-auth.username=
opertusmundi.feign.rating-service.basic-auth.password=

# Email service (JWT token authentication)
# Uses private/public key pair for signing/parsing tokens.
opertusmundi.feign.email-service.name=email-service
opertusmundi.feign.email-service.url=
opertusmundi.feign.email-service.jwt.subject=api-gateway

# Message service (JWT token authentication)
# Uses opertusmundi.feign.jwt.secret for signing tokens.
opertusmundi.feign.message-service.name=message-service
opertusmundi.feign.message-service.url=
opertusmundi.feign.message-service.jwt.subject=api-gateway

# Ingest service
opertusmundi.feign.ingest.name=ingest-service
opertusmundi.feign.ingest.url=

# Transform service
opertusmundi.feign.transform.name=transform-service
opertusmundi.feign.transform.url=

# Data Profiler service
opertusmundi.feign.data-profiler.name=data-profiler-service
opertusmundi.feign.data-profiler.url=

#
# File system
#

opertusmundi.file-system.temp-dir=
opertusmundi.file-system.data-dir=
opertusmundi.file-system.asset-dir=

#
# Tracing
#

# For configuration options see:
# https://docs.spring.io/spring-cloud-sleuth/docs/2.2.x-SNAPSHOT/reference/html/appendix.html

spring.sleuth.web.additional-skip-pattern=\/|\/api-docs.*|\/swagger.*|\/assets\/.*|.+favicon.*

spring.zipkin.enabled=false
spring.zipkin.base-url=http://localhost:9411

#
# MangoPay
#

opertusmundi.payments.mangopay.base-url=https://api.mangopay.com
opertusmundi.payments.mangopay.client-id=
opertusmundi.payments.mangopay.client-password=

#
# Uploading
#

spring.servlet.multipart.max-file-size = 20MB
spring.servlet.multipart.max-request-size = 21MB
