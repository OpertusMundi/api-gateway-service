#
# Application settings
#

# Properties injected from Maven
# See: https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-automatic-expansion-maven
application.project.base-dir=@project.basedir@
application.parent.project.base-dir=@project.parent.basedir@

#
# Server
#

server.port=8081

#
# Logging
#

logging.config=classpath:log4j2-testing.xml

#
# Session
#

spring.session.store-type=none

#https://github.com/spring-projects/spring-session/issues/1257
server.servlet.session.cookie.name=SESSION

#
# Data source
#

spring.datasource.url=jdbc:postgresql://localhost:5432/opertus-mundi-test
spring.datasource.username=
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.idleTimeout=600000
spring.datasource.hikari.maxLifetime=1800000
spring.datasource.hikari.maximumPoolSize=5

#
# JPA / Hibernate
#

spring.jpa.show-sql=true

spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=none

spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=target/generated-sql/testing/schema.sql

#
# Authentication Providers (comma-separated list of authentication provider keys)
#
# Include invalid "custom" provider
#
opertus-mundi.authentication-providers=forms,custom

#
# Tracing
#

# For configuration options see:
# https://docs.spring.io/spring-cloud-sleuth/docs/2.2.x-SNAPSHOT/reference/html/appendix.html

spring.zipkin.enabled=false

#
# Spring Cloud Feign clients
#

# Catalogue service (use different port for mock server)
opertusmundi.feign.catalogue.url=http://localhost:8086/

#
# MangoPay
#

opertusmundi.payments.mangopay.web-hook.create-on-startup=false

#
# File system
#

opertusmundi.file-system.temp-dir=${java.io.tmpdir}/integration-test/tmp
opertusmundi.file-system.data-dir=${java.io.tmpdir}/integration-test/user
opertusmundi.file-system.draft-dir=${java.io.tmpdir}/integration-test/drafts
opertusmundi.file-system.asset-dir=${java.io.tmpdir}/integration-test/assets
opertusmundi.file-system.contract-dir=${java.io.tmpdir}/integration-test/contracts
opertusmundi.file-system.invoice-dir=${java.io.tmpdir}/integration-test/invoices
opertusmundi.file-system.order-dir=${java.io.tmpdir}/integration-test/orders

#
# Uploading
#

spring.servlet.multipart.max-file-size=1MB
spring.servlet.multipart.max-request-size=2MB

#
# Elastic Search
#

opertusmundi.elastic.enabled=false

#
# GeoServer (WireMock server)
#

opertusmundi.geoserver.endpoint=http://localhost:9991/geoserver

#
# Contract PDF generation
#

opertusmundi.contract.signpdf.key-store=

#
# API Documentation
#

springdoc.api-docs.enabled=true
springdoc.api-docs.server=http://localhost:8080

#
# GeoServer
#

opertusmundi.geoserver.endpoint=http://localhost:8080/geoserver
opertusmundi.geoserver.workspace=opertusmundi

opertusmundi.geodata.config=classpath:config/geodata.properties

#
# Flyway
#
spring.flyway.enabled=false

